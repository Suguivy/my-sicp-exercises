(define (make-table)
  (list '*table*))

(define (insert! keys value table)
  (define (make-record keys value)
    (if (null? (cdr keys))
        (cons (car keys) value)
        (list (car keys) (make-record (cdr keys) value))))
  (let ((record (assoc (car keys) (cdr table))))
    (cond ((not record) (set-cdr! table (cons (make-record keys value)
                                              (cdr table))))
          ((not (pair? (cdr record))) (set-cdr! record value))
          (else (insert! (cdr keys) value record))))

(define (lookup keys table)
  (let ((record (assoc (car keys) (cdr table))))
    (cond ((not record) #f)
          ((not (pair? (cdr record))) (cdr record))
          (else (lookup (cdr keys) record)))))
